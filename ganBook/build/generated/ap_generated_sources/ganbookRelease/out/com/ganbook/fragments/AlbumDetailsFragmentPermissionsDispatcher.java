// This file was generated by PermissionsDispatcher. Do not modify!
package com.ganbook.fragments;

import java.lang.Override;
import java.lang.String;
import java.lang.ref.WeakReference;
import java.util.List;
import permissions.dispatcher.GrantableRequest;
import permissions.dispatcher.PermissionUtils;

final class AlbumDetailsFragmentPermissionsDispatcher {
  private static final int REQUEST_PERFORMDOWNLOADPICTURES = 2;

  private static final String[] PERMISSION_PERFORMDOWNLOADPICTURES = new String[] {"android.permission.WRITE_EXTERNAL_STORAGE"};

  private static GrantableRequest PENDING_PERFORMDOWNLOADPICTURES;

  private static final int REQUEST_SHOWGALLERY = 3;

  private static final String[] PERMISSION_SHOWGALLERY = new String[] {"android.permission.READ_EXTERNAL_STORAGE"};

  private static GrantableRequest PENDING_SHOWGALLERY;

  private static final int REQUEST_SHOWCAMERA = 4;

  private static final String[] PERMISSION_SHOWCAMERA = new String[] {"android.permission.CAMERA","android.permission.READ_EXTERNAL_STORAGE"};

  private static final int REQUEST_SHOWVIDEOCAMERA = 5;

  private static final String[] PERMISSION_SHOWVIDEOCAMERA = new String[] {"android.permission.CAMERA","android.permission.READ_EXTERNAL_STORAGE"};

  private AlbumDetailsFragmentPermissionsDispatcher() {
  }

  static void performDownloadPicturesWithCheck(AlbumDetailsFragment target, List<String> pics) {
    if (PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_PERFORMDOWNLOADPICTURES)) {
      target.performDownloadPictures(pics);
    } else {
      PENDING_PERFORMDOWNLOADPICTURES = new PerformDownloadPicturesPermissionRequest(target, pics);
      target.requestPermissions(PERMISSION_PERFORMDOWNLOADPICTURES, REQUEST_PERFORMDOWNLOADPICTURES);
    }
  }

  static void showGalleryWithCheck(AlbumDetailsFragment target, int typeOfMedia) {
    if (PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWGALLERY)) {
      target.showGallery(typeOfMedia);
    } else {
      PENDING_SHOWGALLERY = new ShowGalleryPermissionRequest(target, typeOfMedia);
      target.requestPermissions(PERMISSION_SHOWGALLERY, REQUEST_SHOWGALLERY);
    }
  }

  static void showCameraWithCheck(AlbumDetailsFragment target) {
    if (PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWCAMERA)) {
      target.showCamera();
    } else {
      target.requestPermissions(PERMISSION_SHOWCAMERA, REQUEST_SHOWCAMERA);
    }
  }

  static void showVideoCameraWithCheck(AlbumDetailsFragment target) {
    if (PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWVIDEOCAMERA)) {
      target.showVideoCamera();
    } else {
      target.requestPermissions(PERMISSION_SHOWVIDEOCAMERA, REQUEST_SHOWVIDEOCAMERA);
    }
  }

  static void onRequestPermissionsResult(AlbumDetailsFragment target, int requestCode,
      int[] grantResults) {
    switch (requestCode) {
      case REQUEST_PERFORMDOWNLOADPICTURES:
      if (PermissionUtils.getTargetSdkVersion(target.getActivity()) < 23 && !PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_PERFORMDOWNLOADPICTURES)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        if (PENDING_PERFORMDOWNLOADPICTURES != null) {
          PENDING_PERFORMDOWNLOADPICTURES.grant();
        }
      }
      PENDING_PERFORMDOWNLOADPICTURES = null;
      break;
      case REQUEST_SHOWGALLERY:
      if (PermissionUtils.getTargetSdkVersion(target.getActivity()) < 23 && !PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWGALLERY)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        if (PENDING_SHOWGALLERY != null) {
          PENDING_SHOWGALLERY.grant();
        }
      }
      PENDING_SHOWGALLERY = null;
      break;
      case REQUEST_SHOWCAMERA:
      if (PermissionUtils.getTargetSdkVersion(target.getActivity()) < 23 && !PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWCAMERA)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.showCamera();
      }
      break;
      case REQUEST_SHOWVIDEOCAMERA:
      if (PermissionUtils.getTargetSdkVersion(target.getActivity()) < 23 && !PermissionUtils.hasSelfPermissions(target.getActivity(), PERMISSION_SHOWVIDEOCAMERA)) {
        return;
      }
      if (PermissionUtils.verifyPermissions(grantResults)) {
        target.showVideoCamera();
      }
      break;
      default:
      break;
    }
  }

  private static final class PerformDownloadPicturesPermissionRequest implements GrantableRequest {
    private final WeakReference<AlbumDetailsFragment> weakTarget;

    private final List<String> pics;

    private PerformDownloadPicturesPermissionRequest(AlbumDetailsFragment target,
        List<String> pics) {
      this.weakTarget = new WeakReference<AlbumDetailsFragment>(target);
      this.pics = pics;
    }

    @Override
    public void proceed() {
      AlbumDetailsFragment target = weakTarget.get();
      if (target == null) return;
      target.requestPermissions(PERMISSION_PERFORMDOWNLOADPICTURES, REQUEST_PERFORMDOWNLOADPICTURES);
    }

    @Override
    public void cancel() {
    }

    @Override
    public void grant() {
      AlbumDetailsFragment target = weakTarget.get();
      if (target == null) return;
      target.performDownloadPictures(pics);
    }
  }

  private static final class ShowGalleryPermissionRequest implements GrantableRequest {
    private final WeakReference<AlbumDetailsFragment> weakTarget;

    private final int typeOfMedia;

    private ShowGalleryPermissionRequest(AlbumDetailsFragment target, int typeOfMedia) {
      this.weakTarget = new WeakReference<AlbumDetailsFragment>(target);
      this.typeOfMedia = typeOfMedia;
    }

    @Override
    public void proceed() {
      AlbumDetailsFragment target = weakTarget.get();
      if (target == null) return;
      target.requestPermissions(PERMISSION_SHOWGALLERY, REQUEST_SHOWGALLERY);
    }

    @Override
    public void cancel() {
    }

    @Override
    public void grant() {
      AlbumDetailsFragment target = weakTarget.get();
      if (target == null) return;
      target.showGallery(typeOfMedia);
    }
  }
}
